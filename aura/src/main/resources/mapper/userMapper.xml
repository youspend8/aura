<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    
<mapper namespace="com.bitcamp.aura.user.dao.UserMapper">
	<insert id="insert" parameterType="UserVO">
		INSERT INTO USER_ACCOUNT (
			NICKNAME,
			EMAIL,
			PASSWORD,
			TEL,
			NAME,
			SSN,
			GENDER,
			ADDRESS,
			REG_DATE,
			REG_LOCATION,
			DEL_DATE,
			ISADMIN,
			ACCESS_TOKEN,
			REFRESH_TOKEN,
			PW_MISS_COUNT,
			AUTHOR_TYPE,
			PROFILE,
			USERID,
			AGE_RANGE
		)
		VALUES (
			#{nickname, jdbcType=VARCHAR},
			#{email, jdbcType=VARCHAR},
			#{password, jdbcType=VARCHAR},
			#{tel, jdbcType=VARCHAR},
			#{name, jdbcType=VARCHAR},
			#{ssn, jdbcType=VARCHAR},
			#{gender, jdbcType=NUMERIC},
			#{address, jdbcType=VARCHAR},
			SYSTIMESTAMP + 1/24 * 9,
			#{regLocation, jdbcType=NUMERIC},
			#{delDate, jdbcType=VARCHAR},
			#{isAdmin, jdbcType=NUMERIC},
			#{accessToken, jdbcType=VARCHAR},
			#{refreshToken, jdbcType=VARCHAR},
			#{pwMissCount, jdbcType=NUMERIC},
			#{authorType, jdbcType=NUMERIC},
			#{profile, jdbcType=VARCHAR},
			#{userId, jdbcType=VARCHAR},
			#{ageRange, jdbcType=NUMERIC}
		)
	</insert>
	<update id="update" parameterType="UserVO">
		UPDATE 
			USER_ACCOUNT 
		SET
			EMAIL = #{email, jdbcType=VARCHAR},
			PASSWORD = #{password, jdbcType=VARCHAR},
			TEL = #{tel, jdbcType=VARCHAR},
			NAME = #{name, jdbcType=VARCHAR},
			SSN = #{ssn, jdbcType=VARCHAR},
			GENDER = #{gender, jdbcType=NUMERIC},
			ADDRESS = #{address, jdbcType=VARCHAR},
			REG_LOCATION = #{regLocation, jdbcType=NUMERIC},
			<if test="delDate != null">
				DEL_DATE = SYSTIMESTAMP + 1/24 * 9,
			</if>
			ISADMIN = #{isAdmin, jdbcType=NUMERIC},
			ACCESS_TOKEN = #{accessToken, jdbcType=VARCHAR},
			REFRESH_TOKEN = #{refreshToken, jdbcType=VARCHAR},
			PW_MISS_COUNT = #{pwMissCount, jdbcType=NUMERIC},
			AUTHOR_TYPE = #{authorType, jdbcType=NUMERIC},
			PROFILE = #{profile, jdbcType=VARCHAR},
			USERID = #{userId, jdbcType=VARCHAR},
			AGE_RANGE = #{ageRange, jdbcType=NUMERIC}
		WHERE
			NICKNAME = #{nickname, jdbcType=VARCHAR}
	</update>
	<delete id="delete" parameterType="String">
		DELETE FROM
			USER_ACCOUNT
		WHERE
			NICKNAME = #{nickname, jdbcType=VARCHAR}
	</delete>
	<select id="selectOne" parameterType="String" resultType="UserVO">
		SELECT 
			NICKNAME AS nickname,
			EMAIL AS email,
			PASSWORD AS password,
			TEL AS tel,
			NAME AS name,
			SSN AS ssn,
			GENDER AS gender,
			ADDRESS AS address,
			REG_DATE AS regDate,
			REG_LOCATION AS regLocation,
			DEL_DATE AS delDate,
			ISADMIN AS isAdmin,
			ACCESS_TOKEN AS accessToken,
			REFRESH_TOKEN AS refreshToken,
			PW_MISS_COUNT AS pwMissCount,
			AUTHOR_TYPE AS authorType,
			PROFILE AS profile,
			USERID AS userId,
			AGE_RANGE AS ageRange
		FROM
			USER_ACCOUNT
		WHERE
			NICKNAME = #{nickname, jdbcType=VARCHAR}
			
	</select>
	<select id="selectOneUserid" parameterType="String" resultType="UserVO">
		SELECT 
			NICKNAME AS nickname,
			EMAIL AS email,
			PASSWORD AS password,
			TEL AS tel,
			NAME AS name,
			SSN AS ssn,
			GENDER AS gender,
			ADDRESS AS address,
			REG_DATE AS regDate,
			REG_LOCATION AS regLocation,
			DEL_DATE AS delDate,
			ISADMIN AS isAdmin,
			ACCESS_TOKEN AS accessToken,
			REFRESH_TOKEN AS refreshToken,
			PW_MISS_COUNT AS pwMissCount,
			AUTHOR_TYPE AS authorType,
			PROFILE AS profile,
			USERID AS userId,
			AGE_RANGE AS ageRange
		FROM
			USER_ACCOUNT
		WHERE
			USERID = #{userid}
	</select>
	<select id="selectOneEmail" parameterType="String" resultType="UserVO">
		SELECT
			NICKNAME AS nickname,
			EMAIL AS email,
			PASSWORD AS password,
			TEL AS tel,
			NAME AS name,
			SSN AS ssn,
			GENDER AS gender,
			ADDRESS AS address,
			REG_DATE AS regDate,
			REG_LOCATION AS regLocation,
			DEL_DATE AS delDate,
			ISADMIN AS isAdmin,
			ACCESS_TOKEN AS accessToken,
			REFRESH_TOKEN AS refreshToken,
			PW_MISS_COUNT AS pwMissCount,
			AUTHOR_TYPE AS authorType,
			PROFILE AS profile,
			USERID AS userId,
			AGE_RANGE AS ageRange
		FROM
			USER_ACCOUNT
		WHERE
			EMAIL = #{email, jdbcType=VARCHAR}
	</select>
	<select id="selectByParams" parameterType="java.util.HashMap" resultType="UserVO">
		SELECT
			NICKNAME AS nickname,
			EMAIL AS email,
			PASSWORD AS password,
			TEL AS tel,
			NAME AS name,
			SSN AS ssn,
			GENDER AS gender,
			ADDRESS AS address,
			REG_DATE AS regDate,
			REG_LOCATION AS regLocation,
			DEL_DATE AS delDate,
			ISADMIN AS isAdmin,
			ACCESS_TOKEN AS accessToken,
			REFRESH_TOKEN AS refreshToken,
			PW_MISS_COUNT AS pwMissCount,
			AUTHOR_TYPE AS authorType,
			PROFILE AS profile,
			USERID AS userId,
			AGE_RANGE AS ageRange
		FROM 
			USER_ACCOUNT
		WHERE 
			1 = 1 
		<if test="nickname != null">
			AND
				NICKNAME LIKE '%'||#{nickname, jdbcType=VARCHAR}||'%'
		</if>
		<if test="isDel != null">
			AND
				DEL_DATE IS NOT NULL
		</if>
	</select>
	
	<select id="selectAll" resultType="UserVO">
		SELECT
			NICKNAME AS nickname,
			EMAIL AS email,
			PASSWORD AS password,
			TEL AS tel,
			NAME AS name,
			SSN AS ssn,
			GENDER AS gender,
			ADDRESS AS address,
			REG_DATE AS regDate,
			REG_LOCATION AS regLocation,
			DEL_DATE AS delDate,
			ISADMIN AS isAdmin,
			ACCESS_TOKEN AS accessToken,
			REFRESH_TOKEN AS refreshToken,
			PW_MISS_COUNT AS pwMissCount,
			AUTHOR_TYPE AS authorType,
			PROFILE AS profile,
			USERID AS userId,
			AGE_RANGE AS ageRange
		FROM
			USER_ACCOUNT
	</select>
	
	<select id="selectGenderCount" resultType="HashMap">
		SELECT
			(
				SELECT
					COUNT(NICKNAME)
				FROM
					USER_ACCOUNT
				WHERE
					USER_ACCOUNT.GENDER = 1
			) AS MALE,
			(
				SELECT
					COUNT(NICKNAME)
				FROM
					USER_ACCOUNT
				WHERE
					USER_ACCOUNT.GENDER = 0
			) AS FEMALE
		FROM
			DUAL
	</select>
	
	<select id="selectUserRegCount" resultType="HashMap" parameterType="HashMap">
		SELECT
		    (
		        SELECT
		            COUNT(NICKNAME)
		        FROM
		            USER_ACCOUNT
		        WHERE
		            REG_DATE BETWEEN #{day1, jdbcType=VARCHAR} AND #{day0, jdbcType=VARCHAR}
		    ) AS ONE,
		    (
		        SELECT
		            COUNT(NICKNAME)
		        FROM
		            USER_ACCOUNT
		        WHERE
		            REG_DATE BETWEEN #{day2, jdbcType=VARCHAR} AND #{day1, jdbcType=VARCHAR}
		    ) AS TWO,
		    (
		        SELECT
		            COUNT(NICKNAME)
		        FROM
		            USER_ACCOUNT
		        WHERE
		            REG_DATE BETWEEN #{day3, jdbcType=VARCHAR} AND #{day2, jdbcType=VARCHAR}
		    ) AS THREE,
		    (
		        SELECT
		            COUNT(NICKNAME)
		        FROM
		            USER_ACCOUNT
		        WHERE
		            REG_DATE BETWEEN #{day4, jdbcType=VARCHAR} AND #{day3, jdbcType=VARCHAR}
		    ) AS FOUR,
		    (
		        SELECT
		            COUNT(NICKNAME)
		        FROM
		            USER_ACCOUNT
		        WHERE
		            REG_DATE BETWEEN #{day5, jdbcType=VARCHAR} AND #{day4, jdbcType=VARCHAR}
		    ) AS FIVE,
		    (
		        SELECT
		            COUNT(NICKNAME)
		        FROM
		            USER_ACCOUNT
		        WHERE
		            REG_DATE BETWEEN #{day6, jdbcType=VARCHAR} AND #{day5, jdbcType=VARCHAR}
		    ) AS SIX,
		    (
		        SELECT
		            COUNT(NICKNAME)
		        FROM
		            USER_ACCOUNT
		        WHERE
		            REG_DATE BETWEEN #{day7, jdbcType=VARCHAR} AND #{day6, jdbcType=VARCHAR}
		    ) AS SEVEN
		FROM
		    DUAL
	</select>
</mapper>